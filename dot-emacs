(add-to-list 'load-path "~/.emacs.d")
(add-to-list 'load-path "~/.emacs.d/autocomplete")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Visual customization
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; color theme
(require 'color-theme)
(color-theme-initialize)

; skip welcome screen
(setq inhibit-startup-screen t)

; syntax highlightning on by default
(setq-default global-font-lock-mode t)

; show column numbers
(setq-default column-number-mode t)

; show current line
(setq-default line-number-mode t)

; automatic wrap to 80 columns (TODO)
(setq-default fill-column 80)
; (setq auto-fill-mode t)

; show selection
(setq-default transient-mark-mode t)

; show matching parenthesis
(show-paren-mode t)

; disable the menubar (promotes good emacs memory :)
(menu-bar-mode nil)
(scroll-bar-mode nil)
(tool-bar-mode nil)

; blinking top and bottom lines instead of speaker buzz
(setq-default visible-bell t)

; always show trailing whitespace
(setq-default show-trailing-whitespace t)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Behavior
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; backup files are for sissies
(setq-default make-backup-files nil)

; always indent with spaces
(setq-default indent-tabs-mode nil)
(setq-default default-tab-width 4)

; save files to home directory by default
(setq-default default-directory '~)

; move between windows with SHIFT+arrows
(windmove-default-keybindings)

; replace yes/no questions with y/n
(fset 'yes-or-no-p 'y-or-n-p)

; (much) bigger kill ring
(setq-default kill-ring-max 1000)

; start server for emacsclient
(server-start)

; make dead keys work on graphic environments
(load-library "iso-transl")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Keybindings
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(global-set-key (kbd "M--") 'dabbrev-expand)
(global-set-key (kbd "C-x C-b") 'ibuffer)
(global-set-key (kbd "C-x M-v") 'svn-status)
(global-set-key (kbd "M-g") 'goto-line)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Ido (Interactively Do Things)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(require 'ido)
(ido-mode t)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Uniquify (smart buffer renaming)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(require 'uniquify)
(setq uniquify-buffer-name-style 'reverse)
(setq uniquify-separator "/")
; rename after killing uniquified
(setq uniquify-after-kill-buffer-p t)
; don't mess with special buffers
(setq uniquify-ignore-buffers-re "^\\*")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Dired-x (extras por dired mode)
;; http://www.gnu.org/software/emacs/manual/html_mono/dired-x.html
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(add-hook 'dired-load-hook
          (lambda ()
            (load "dired-x")
            ;; Set dired-x global variables here.
            ))
(add-hook 'dired-mode-hook
          (lambda ()
            ;; Set dired-x buffer-local variables here.
            (dired-omit-mode t)
            ))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Yasnippet (template system)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(require 'yasnippet)
(yas/initialize)
(yas/load-directory "~/.emacs.d/yasnippets/")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Subversion mode
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; psvn is included in Emacs but it's not activated by default
(require 'psvn)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; flymake & pyflakes
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; you need pyflakes in your path to make this work
(when (load "flymake" t)
  (defun flymake-pyflakes-init ()
    (let* ((temp-file (flymake-init-create-temp-buffer-copy
		       'flymake-create-temp-inplace))
	   (local-file (file-relative-name
			temp-file
			(file-name-directory buffer-file-name))))
      (list "pyflakes" (list local-file))))

  (add-to-list 'flymake-allowed-file-name-masks
	       '("\\.py\\'" flymake-pyflakes-init)))

(add-hook 'find-file-hook 'flymake-find-file-hook)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Rope & Ropemacs (Python refactoring)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Initialize Pymacs
;(autoload 'pymacs-apply "pymacs")
;(autoload 'pymacs-call "pymacs")
;(autoload 'pymacs-eval "pymacs" nil t)
;(autoload 'pymacs-exec "pymacs" nil t)
;(autoload 'pymacs-load "pymacs" nil t)

;; Initialize Rope
;(pymacs-load "ropemacs" "rope-")
;(setq ropemacs-enable-autoimport t)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Django HTML mode
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;(require 'django-html-mode)

; associate by default with .html files
;(add-to-list 'auto-mode-alist '("\\.html$'" . django-html-mode))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; SGML mode
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setq sgml-validate-command '"nsgmls -s -c /usr/share/sgml/xml.soc")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Autocomplete
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(require 'auto-complete)
(require 'auto-complete-css)
(require 'auto-complete-python)
(require 'auto-complete-yasnippet)
(global-auto-complete-mode t)
(define-key ac-complete-mode-map "\t" 'ac-complete)
(define-key ac-complete-mode-map "\r" nil)
(add-hook 'python-mode-hook
          (lambda ()
            (setq ac-sources '(ac-source-ropemacs ac-source-yasnippet))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; PHP xdebug support
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(add-to-list 'load-path "~/.emacs.d/geben-0.24")
(autoload 'geben "geben" "PHP Debugger on Emacs" t)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Pijaditas
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; display time at status bar
(setq-default display-time-24hr-format t)
(display-time)

; google maps support
(add-to-list 'load-path "~/proyectos/jd-el")
(require 'google-maps)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; user preferences
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; load user preferences at the end to redefine defaults
(load-library "user-preferences")
